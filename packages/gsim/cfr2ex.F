c
      SUBROUTINE CFR2EX(ENERGY,DEPTH,XRAN)
c-  Original subroutine name  :  RND2EX
c    Modified:
c              2-Jul-98  David J. Tedeschi
c
c-------------------------------------------------
      INTEGER I
      INTEGER IESLIC
      INTEGER IDEPTH
      INTEGER J
C
      REAL A
C      REAL B
      REAL BBBUF(8,6)
      REAL CCBUF(8,6)
      REAL DDBUF(8,6)
      REAL COEFFS(20,6)
      REAL CRRAY(120)
      REAL ENERGY
      REAL DEPTH
      REAL RNDCUT
      REAL RNDNUM
      real rndm(1)
      REAL R0
      REAL SLOPE
      REAL TEMP1
      REAL TEMP2
      REAL EHI(7)
      REAL XARG
      REAL XRAN
      REAL ZWID
      EQUIVALENCE(COEFFS(1,1),CRRAY(1))
C
C 5 GEV smoothed
      DATA (CRRAY(J),J=1,20) /
     + 0.161E+02, 0.395E+01, 0.225E+01, 0.170E+01, 0.147E+01,
     + 0.123E+01, 0.104E+01, 0.944E+00, 0.870E+00, 0.866E+00,
     + 0.820E+00, 0.740E+00, 0.740E+00, 0.740E+00, 0.650E+01,
     + 0.650E+00, 0.650E+00, 0.650E+00, 0.566E+00, 0.566E+00/
      DATA (CRRAY(J),J=21,40)/
     + 0.160E+02, 0.672E+01, 0.346E+01, 0.285E+01, 0.236E+01,
     + 0.200E+01, 0.180E+01, 0.170E+01, 0.155E+01, 0.148E+01,
     + 0.142E+01, 0.123E+01, 0.118E+01, 0.110E+01, 0.844E+00,
     + 0.118E+01, 0.110E+01, 0.114E+01, 0.887E+00, 0.696E+00/
      DATA(CRRAY(J),J=41,60)/
     + 0.189E+02, 0.113E+02, 0.531E+01, 0.381E+01, 0.327E+01,
     + 0.291E+01, 0.264E+01, 0.221E+01, 0.225E+01, 0.219E+01,
     + 0.204E+01, 0.176E+01, 0.185E+01, 0.160E+01, 0.178E+01,
     + 0.178E+01, 0.181E+01, 0.160E+01, 0.136E+01, 0.143E+01/
      DATA(CRRAY(J),J=61,80)/
     + 0.208E+02, 0.140E+02, 0.710E+01, 0.504E+01, 0.428E+01,
     + 0.392E+01, 0.343E+01, 0.305E+01, 0.284E+01, 0.247E+01,
     + 0.227E+01, 0.205E+01, 0.211E+01, 0.180E+01, 0.191E+01,
     + 0.175E+01, 0.174E+01, 0.169E+01, 0.190E+01, 0.161E+01/
      DATA(CRRAY(J),J=81,100)/
     + 0.237E+02, 0.206E+02, 0.136E+02, 0.114E+02, 0.909E+01,
     + 0.693E+01, 0.483E+01, 0.443E+01, 0.416E+01, 0.431E+01,
     + 0.361E+01, 0.277E+01, 0.249E+01, 0.243E+01, 0.260E+01,
     + 0.263E+01, 0.204E+01, 0.235E+01, 0.262E+01, 0.239E+01/
      DATA(CRRAY(J),J=101,120)/
     + 0.242E+02, 0.221E+02, 0.155E+02, 0.131E+02, 0.109E+02,
     + 0.955E+01, 0.799E+01, 0.650E+01, 0.526E+01, 0.471E+01,
     + 0.465E+01, 0.417E+01, 0.436E+01, 0.302E+01, 0.299E+01,
     + 0.267E+01, 0.285E+01, 0.292E+01, 0.246E+01, 0.231E+01/
      SAVE CRRAY
C
C   8 Z SLICES, 6 ENERGY SLICES
      DATA BBBUF /
     + 0.152E+02, 0.533E+01, 0.183E+01, 0.735E-01,
     + 0.602E-07, 0.531E-07, 0.162E-06, 0.735E-08,
     + 0.154E+02, 0.825E+01, 0.459E+01, 0.344E+01,
     + 0.261E+01, 0.191E+01, 0.175E+01, 0.130E+01,
     + 0.173E+02, 0.118E+02, 0.695E+01, 0.567E+01,
     + 0.468E+01, 0.416E+01, 0.384E+01, 0.310E+01,
     + 0.188E+02, 0.144E+02, 0.885E+01, 0.745E+01,
     + 0.618E+01, 0.622E+01, 0.543E+01, 0.517E+01,
     + 0.126E+02, 0.145E+02, 0.144E+02, 0.120E+02,
     + 0.105E+02, 0.896E+01, 0.754E+01, 0.651E+01,
     + 0.950E+01, 0.104E+02, 0.139E+02, 0.130E+02,
     + 0.117E+02, 0.108E+02, 0.983E+01, 0.895E+01/
      DATA CCBUF /
     + 0.216E-01, 0.199E+00, 0.525E+00, 0.907E+00,
     + 0.910E+00, 0.126E+01, 0.144E+01, 0.144E+01,
     + 0.153E-01, 0.839E-01, 0.224E+00, 0.297E+00,
     + 0.416E+00, 0.538E+00, 0.611E+00, 0.654E+00,
     + 0.109E-01, 0.371E-01, 0.112E+00, 0.180E+00,
     + 0.220E+00, 0.255E+00, 0.296E+00, 0.386E+00,
     + 0.802E-02, 0.247E-01, 0.720E-01, 0.127E+00,
     + 0.153E+00, 0.174E+00, 0.197E+00, 0.216E+00,
     + 0.892E-02, 0.136E-01, 0.244E-01, 0.471E-01,
     + 0.628E-01, 0.781E-01, 0.127E+00, 0.138E+00,
     + 0.147E-01, 0.147E-01, 0.224E-01, 0.318E-01,
     + 0.451E-01, 0.512E-01, 0.636E-01, 0.867E-01/
      DATA DDBUF /
     + 0.190E+01, 0.179E+01, 0.163E+01, 0.150E+01,
     + 0.136E+01, 0.133E+01, 0.137E+01, 0.115E+01,
     + 0.176E+01, 0.174E+01, 0.169E+01, 0.160E+01,
     + 0.157E+01, 0.153E+01, 0.145E+01, 0.138E+01,
     + 0.184E+01, 0.173E+01, 0.161E+01, 0.164E+01,
     + 0.159E+01, 0.152E+01, 0.153E+01, 0.147E+01,
     + 0.188E+01, 0.185E+01, 0.164E+01, 0.170E+01,
     + 0.163E+01, 0.170E+01, 0.161E+01, 0.153E+01,
     + 0.149E+01, 0.166E+01, 0.158E+01, 0.174E+01,
     + 0.174E+01, 0.164E+01, 0.169E+01, 0.157E+01,
     + 0.159E+01, 0.140E+01, 0.152E+01, 0.156E+01,
     + 0.163E+01, 0.162E+01, 0.154E+01, 0.164E+01/
      SAVE BBBUF,CCBUF,DDBUF
C
      DATA EHI / 0., 20., 50., 100., 500., 1000., 99999. /
C BREAK POINT FOR DOUBLE EXP = 8 CM IN LEAD
      DATA R0 /.441176/
C Z BIN WIDTH IN LAMBDA = 5 CM IN LEAD
      DATA ZWID / .294118 /
      SAVE EHI,R0,ZWID
C
C
C FIND ENERGY SLICE
C
      DO 101 I=1,7
        IF(EHI(I).GT.ENERGY) THEN
          IESLIC = I-1
C GET OUT
          IESLIC = MAX(IESLIC,1)
          IESLIC = MIN(IESLIC,6)
          GO TO 103
        END IF
  101 CONTINUE
C
  103 CONTINUE
C
C FIND CORRECT SLOPE
C
      IDEPTH = INT(DEPTH/ZWID)+1
      IDEPTH = MAX(1,IDEPTH)
      IDEPTH = MIN(20,IDEPTH)
C
C FOR FIRST 2 LAMBDA FIT DO PIECEWISE EXPON BREAK AT .4 LAMBDA
      call grndm(rndm,1)
      RNDNUM = RNDM(1)
      IF(IDEPTH.LE.8) THEN
        IF(IDEPTH.GT.2 .AND. IESLIC.EQ.1) THEN
          SLOPE = COEFFS(IDEPTH,IESLIC)
          XRAN = -1./SLOPE*LOG(RNDNUM)
        ELSE
          TEMP1 = (1.- EXP(-BBBUF(IDEPTH,IESLIC)*R0))/
     &      BBBUF(IDEPTH,IESLIC)
          TEMP2 = CCBUF(IDEPTH,IESLIC)/DDBUF(IDEPTH,IESLIC)*
     &      EXP(-DDBUF(IDEPTH,IESLIC)*R0)
C
          A = 1./(TEMP1+TEMP2)
C         B = A*EXP(-(BBBUF(IDEPTH,IESLIC)-DDBUF(IDEPTH,IESLIC))*R0)
C         B = A*CCBUF(IDEPTH,IESLIC)
          RNDCUT = A/BBBUF(IDEPTH,IESLIC)*
     &      (1.-EXP(-BBBUF(IDEPTH,IESLIC)*R0))
          IF(RNDNUM.GT.RNDCUT) THEN
            XARG = EXP(-DDBUF(IDEPTH,IESLIC)*R0) +
     &         DDBUF(IDEPTH,IESLIC)/CCBUF(IDEPTH,IESLIC)*
     &          (TEMP1 -  RNDNUM/A)
            IF (XARG.LE.0.) THEN
cdjt
              CALL recmes('CFR2EX','W','XARG is negative')
              XARG = MAX(1.E-9,XARG)
            END IF
            XRAN = -1./DDBUF(IDEPTH,IESLIC)*
     &             LOG(XARG)
          ELSE
            XARG = 1.-(BBBUF(IDEPTH,IESLIC)/A)*RNDNUM
            IF (XARG.LE.0.) THEN
cdjt
              CALL recmes('CFR2EX','W','XARG is negative')
              XARG = MAX(1.E-9,XARG)
            END IF
            XRAN = -1./BBBUF(IDEPTH,IESLIC)*
     &              LOG(XARG)
          END IF
        END IF
      ELSE
        SLOPE = COEFFS(IDEPTH,IESLIC)
        XRAN = -1./SLOPE*LOG(RNDNUM)
      END IF
      END
