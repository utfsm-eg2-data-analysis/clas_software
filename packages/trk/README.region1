The routine region1 is used to reconstruct tracks that have given a
signal in region1 only (axial and stereo). In other cases, tracks are
normally reconstructed by HBT and TBT and are not processed by this routine.

Region1 has no magnetic field around, its analysing power is zero,
the only information that can be extracted are
then the position and direction of clusters in this region. This will
constrain the event reconstruction.

1/ DC0 informations are read from scratch. This gives all wires hit. This
is needed ONLY because the bank DHCL (see below) does not contain TDC
informations but only wire numbers. Each wire is given a TDC value in the
array wire_tdc(ILAYER,IWIRE).

C v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^

2/ Then, DHCL is read. This bank is filled in ana_segm and ana_prfit.F.
It contains all the clusters of all the superlayers for all tracks.


!       BANKname BANKtype      ! Comments
 TABLE  DHCL       B08  ! create write display delete ! drift chamber hit cluster
!
! record# = Sector
!  all hit clusters within a superlayer are reported, 

!  those that are used in tracks are marked:  BTRK=2**(track_in_sector-1)
!
!   ATTributes:
!   -----------
!COL ATT-name FMT Min    Max   ! Comments
!
  1  SLY      I     1       6  ! superlayer
  2  BTRK     I     0     255  ! track_in_sector# (bit set in ana_prfit)
  3  TRKS1    I     0     255  ! combinations to track segments
  4  TRKS2    I     0     255  !   "             "       "
  5  WIRE1    I     1     192  ! 1.wire# in this cluster in layer 1
  6  BWIR1    I     0     255  ! hits in this layer (starting from WIRE1) (bit st)
  7  WIRE2    I     1     192  ! 1.wire# in this cluster in layer 2
  8  BWIR2    I     0     255  ! hits in this layer (starting from WIRE2) (bit st)
  9  WIRE3    I     1     192  ! 1.wire# in this cluster in layer 3
 10  BWIR3    I     0     255  ! hits in this layer (starting from WIRE3) (bit st)
 11  WIRE4    I     1     192  ! 1.wire# in this cluster in layer 4
 12  BWIR4    I     0     255  ! hits in this layer (starting from WIRE4) (bit st)
 13  WIRE5    I     1     192  ! 1.wire# in this cluster in layer 5
 14  BWIR5    I     0     255  ! hits in this layer (starting from WIRE5) (bit st)
 15  WIRE6    I     1     192  ! 1.wire# in this cluster in layer 6
 16  BWIR6    I     0     255  ! hits in this layer (starting from WIRE6) (bit st)
!
 END TABLE
!

BWIRn are bit patterns that work as follows :
If WIRE1 = 197 for instance and BWIR1=00101101, it means that wires
197,199,200,202 have been hit in layer 1. If BWIR1=0, it means no wires are
hit in layer 1.

BTRK is equal to 0 if the cluster has not been used by HBT and TBT to
reconstrucut a track.

C v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^

C 3/ Get (kinda) slope and position of clusters for each SL.
For each cluster with BTRK=0, a "position" and "slope" of the cluster are
determined. The array N_HIT_IN_CL(isl,icl) contains the number of wires hit
in the cluster icl of superlayer isl. Array w_in_cl(isl,icl,ihit,index)
conatins the layer and the wire of each hit of cluster icl in superlayer isl.
Index=3 contains the TDC value of this hit.
Position is a kind of average WIRE NUMBER of the cluster. It is NOT a
position in cm.
c Position is defined in wire numbering unit, average wire number in layer.
c Slope is defined in wire/layer, ie difference of average wire number
C between 2 consecutive layers.
C Line in coordinates : X = wire numbers, Y = layer number
C           y = slope*(layer-1) + average_wire_number_in_layer_1

C v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^
C 4/ GET t0, time at the target form bank HEVT
The start_time of each event is read from bank HEVT. This bank was written by
seb from the reconstruction of other complete tracks.

C v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^
C 5/ Find links inside superlayers (links axial and stereo)
Clusters in region 1 are compared (positions and slopes) in order to
associate clusters in axial superlayer with clusters in stereo superlayers.
Are considered as linked clusters those with similar positions and similar
slopes (differences must be within parameters MAX_DPOS and MAX_DSLOPE) and
with a satisfying ki2 (MAX_KI2).
The array LINK_IN_REGION is filled.

C v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^
c 6/ GET DRIFT DISTANCE (call DC_TIME_TO_DIST)
Calculate drift-distance for each wire hit.
This uses routine DC_TIME_TO_DIST the same way it is used for choice number 2
in TBT.
ToF from target to region1 and time of propagation of signal from hit to
preampli are neglected for drift time calculation.
Magnetic field is set to 0.
Beta of particules is arbitrary set to 0.7.
Wires with incorrect drift-time are discarded.
Links with less than MIN_WIRE_PER_SL (=2) wires hit in any of the 2
superlayers are discarded. Links must have at least 2 wires hit in each SL.

C v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^
C 7/ Make a fit with a straight line to minimize distance to wires hit.
Minimization is done with MINUIT. It is slow but faster than a home
made simplex minimization method. The function to minimize is defined in
subroutine CHI2REG.

This subroutine CHI2REG calculates the ki2 defines by :
    Sum_over_wires_hit[((dist_to_wire-dist_measured)/sigma)**2]
o dist_to_wire is the distance of a straight line (which is defined by the
parameters to fit) to a wire hit. Position of the wire is given by the BOS
bank DCGW.
o dist_measured is the drift-distance to this wire as calculated from
drift-time.
o sigma is the error on this drift-distance calculated from error on
drift-time, as given by dc_time_to_frift.

The maximum number of iterations for minimization is MAXITER(=5000).
Minuit defines parameter errors as the change in parameter value required to
change the function value by parameter MINUP.

The fit tries to find a track which intersects the beam axis Z.
o (X,Y,Z) is a point of the track, with X = Y = cste = 0.
o (RTHETA,RPHI) is its direction in polar angles,in sector coordinate system.
   ----> 3 free parameters Z,RTHETA,RPHI.

---------------------------------------------------------------------------
| MINUIT needs to be initialized somewhere with :                         |
|                                                                         |
|       CRMESS = 'Initializing MINUIT, calling MNINIT.'                   |
|       CALL RECMES(CRNAME,'I',CRMESS)                                    |
|       CALL MNINIT(5,6,6)                                                |
|                                                                         |
| This is done by trk_reg1_init.F, called by recsis/rebgjb.F              |
---------------------------------------------------------------------------
C v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^
C 8/ Gets direction and position of links in CLAS coordinate system.
Subroutine REGINTER gets the intersection of a track w/ region 1.
Region 1 is defined from geometry described in BOS bank DCGM.

9/ ----------- OUTPUT BANK ------------
The bank RGLK is filled with clusters in region1.

!       BANKname BANKtype      ! Comments
 TABLE  RGLK    ! create write display delete ! single region hits bank
!
! Positions and directions defined in CLAS coordinate system.
! Bank record is sector-wise.
!
!   ATTributes:
!   -----------
!COL ATT-name      FMT    Min    Max   ! Comments
!
  1  IREGION       I       1      3    ! region
  2  X             F    -999.   999.   ! X pos. of hit in CLAS (cm)
  3  Y             F    -999.   999.   ! Y pos. of hit in CLAS (cm)
  4  Z             F    -999.   999.   ! Z pos. of hit in CLAS (cm)
  5  THETA0        F    -999.   999.   ! polar angle of the link position (deg)
  6  PHI0          F    -999.   999.   ! azim. angle of the link position (deg)
  7  RTHETA        F    -999.   999.   ! polar angle of the link direction (deg)
  8  RPHI          F    -999.   999.   ! azim. angle of the link direction (deg)
  9  CHI2          F       0.   999.   ! fit chi2
 10  STATUS        I       0     10    ! MINUIT fit status (from 0=bad to 3=ok)
!
 END TABLE
!

X,Y,Z give a point in region 1 (intersection of track with the entrance
side of region 1).
THETA0 and PHI0 define the position of the intersection (X,Y,Z) of the track with
entrance of SL2, in polar angle, as seen from CLAS origin.
RTHETA and RPHI define the direction of the track in polar angle.
STATUS word is not used presently (always = 2).
All is defined in CLAS coordinate system.

NB: THETA0 is the direction of the line between CLAS origin and
point (X,Y,Z) in region1 (as defined in CED for example).
As the track crosses the beam axis (fit constraint) the RPHI
angle of the track is equal to the PHI0 angle of the hit in region 1.

-------------------------------------
The routine trk_region1 is called at the end of recsis/recevt.F

        call trk_region1

As the program uses MINUIT, it is rather slow. Routine region1 needs about
40ms. Nevertheless, it should be kept in mind that this routine is only
called for clusters in region1 WHICH HAVE NOT BEEN PREVIOULSY USED BY
TBT, ie only tracks which don't hit region 2 or 3.
-------------------------------------
A tcl variable which default value is .false. switches the routine
trk_region1 on and off.
This variable is LREG1_DO (.false. by default)
--------------------------------------------------------------------------
BOS banks used by this tracking "package"
* DHCL contains the wire hit of every clusters in every superlayer.
* DC0 contains the drift-time (actually TDC channels) for wires hit.
* HEVT contains the event start time.

* DCGM and DCGW contains the geometry of layers and wire positions.

The BOS bank RGLK is created (see format above).
--------------------------------------------------------------------------
Files added :
       trk/trk_region1.F	performs region 1 track reconstruction
       trk/trk_reg1_init.F	initializes MINUIT
       trk/README.region1	this file

Files modified :
       include/run_control.inc	(added 1 line, changed 2 lines)	defines LREG1_DO
       recsis/rntcl_init.F	(added 2 lines)			initializes LREG1_DO
       recsis/rebgjb.F		(added 4 lines)			calls trk_reg1_init
       recsis/recevt.F		(added 2 lines)			calls trk_region1

---
Laurent Farhi, Saclay group.                  farhi@phnx7.saclay.cea.fr
DAPNIA/SPhN - Bat. 703 - CE Saclay - 91191 Gif s/ Yvette Cedex - France
Ph. : (33 or 0) 1 69 08 86 59             Fax : (33 or 0) 1 69 08 75 84
From farhi@jlab.orgWed Jan 20 19:47:27 1999
Date: Fri, 18 Dec 1998 12:58:07 -0500 (EST)
From: Laurent Farhi <farhi@jlab.org>
To: clas_offline@cebaf.gov
Subject: new features for trk_region1

Hi trackers,

I have added new features to the routine trk_region1.F.
This routine reconstructs parts of tracks found in DC regions.
It gives the position and direction of a track in each region hit.
This is useful for tracks that have decayed or when tracks are not
reconstructed properly by HBT/TBT.
(see <http://www.jlab.org/~farhi/region1/region1.html> for more details).

I have now improved the recognition of clusters in regions by adding a new
subroutine. One can now either use the bank DHCL or rebuilt clusters
directly from bank DC0. Finally, some clusters may not be in DHCL if they
are too much tilted, which is often the case for secondary tracks. Using
the new method corrects for the problem.


I have also defined 3 tcl variables :
* reg1_min sets the lowest region to be processed by trk_region1 (def=1)
* reg1_max sets the highest region (def=3)

=> trk_region1 will reconstructs tracks in regions between reg1_min and
reg1_max.

* reg1_use_dhcl (def=.TRUE.) tells the code to use DHCL to construct
clusters. When it is set to .FALSE. then clusters are completely rebuilt
from DC0.

Feel free to ask if you have any question.

Regards.

Laurent.

