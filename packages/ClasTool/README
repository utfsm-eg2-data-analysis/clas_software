********************************************************************************
*                                                                              *
*   The ClasTool ROOT based CLAS analysis package.                             *
*                                                                              *
*   Maintainer: Maurik Holtrop  maurik.holtrop@improv.unh                      *
*                                                                              *
********************************************************************************

Welcome to the ClasTool directory tree, the location of the ROOT analysis 
classes.

GENERAL INFO FOR THIS SOFTWARE: http://www.physics.unh.edu/Maurik/ClasTool.html

This file is only a very brief introduction to the classes and their capabilities.
The main documentation is in the code itself, and is summarized by automatic
HTML generation in the "html" directory. 

An overview of the directories:

ClasBanks
   A set of classes which defines the data structures needed for CLAS analysis.
   These structures mimic those of the BOS banks.

ClasTool:
   The main classes for looking at the Data.
   Here you will find classes for Momentum Corrections, Fiducial Cuts, PID correctors
   etc. All the standard tools for data analysis. 
   * Your OWN analysis would be based on this set of classes by DERIVNIG from this class. *

Helicity:
   A class to decode the scrabled helicity states due to the delayed reporting.

MapTools:
   A set of classes to retreive (and later to put) data from the MAP database.

VirtualReader:
   The master class for any of the Reader classes. A Reader class is the interface
   to the data on disk. All of the Reader classses must derive from the TVirtualReader
   so that they implement a uniform interface to the rest of the analysis system

DSTReader:
   Reads the RootDST

NT10Reader:
   Reads Ntuple-10 based hbook files.

html: 
   Automatic documentation generation directory. Your HTML docs appear here.

macros:
   Essential macros, such as Load_Libs.C, to make your life easier.


Please be thoughtful if you plan on added a directory to this set, and please
be thoughtful if you wish to add/modify files in any of the existing directories.
The general scheme for what is considered good coding practice is found in:
http://www.physics.unh.edu/Maurik/CreatingCleanCode.shtml

------------------------------------------------------------------------------
Please DO:

	Fix Bugs.
	Add useful code, methods etc.
	Fix/improve documentation.
	Check your improvements into your own branch first.
------------------------------------------------------------------------------
Please DO NOT:

	Add undocumented macros or code that only you can use.
	Remove or rewrite large parts of the code without checking with the 
 	  original author.
	Move Tags.
------------------------------------------------------------------------------	

Thank you very much for your contributions!
I hope these codes are useful to you,

	Maurik Holtrop

