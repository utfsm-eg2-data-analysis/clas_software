// Autogenerated Class (Header File)
// Author : G.Gavalian
// Date   : Tue Jul 21 09:03:23 EDT 2009
//

#ifndef __TClasEvent__
#define __TClasEvent__
#include <iostream>
#include <TROOT.h>
#include <TVector3.h>
#include <TObject.h>
#include <TDSTReader.h>
#include <TNamed.h>
#include <vector>
#include <cmath>
#include <TClasParticle.h>
#include <TObjArray.h>
#include <TObjString.h>

using namespace std;

class TClasEvent : public TNamed {

private:

  TString          fExclusiveFlag;
  TString          fRootDSTEventBank;
  TString          fPartInfo;

  TString          fClasBeamType;

  TClasParticle    fClasBeam;
  TClasParticle    fClasTarget;
  TTAGRClass       fTAGRPhoton;

  vector<TClasParticle>  fPART_Store;
  vector<int>            fPartInfoPdgId;
  int                    fExcessCharged;
  int                    fExcessNeutral;
  Int_t                  fClasRunNumber;
  Int_t                  fClasEventNumber;

public:

TClasEvent ();
~TClasEvent ();

 TClasEvent ( const char *name);
 TClasEvent ( const char *name, const char *partinfo, const char *partBank="EVNT");
 TClasEvent ( const TClasEvent &event);
 
 void     SetExclusiveFlag(const char *_excl_flag);
 TString  GetExclusiveFlag()const {return fExclusiveFlag;};
 void     SetBeamType(const char *beamtype){fClasBeamType = beamtype;};
 TString  GetBeamType() const {return fClasBeamType;};

 void     Reset();
 void     SetReaction(const char *partinfo);
 TString  GetReaction() const {return fPartInfo;};

 virtual void      BuildEvent(TVirtualReader &fReader);
 virtual void      SetEventBank(const char *bankname)
 {fRootDSTEventBank = bankname;};

 virtual TString   GetEventBank() const {return fRootDSTEventBank;};
 virtual Int_t     GetEventStatus();
 virtual Double_t  Get(const char *_par);
 virtual TLorentzVector  GetMissing(int indx);
 virtual TLorentzVector  GetInvariant(int indx1, int indx2);

 void              FindPhotonBeamSEB(TVirtualReader &fR);
 void              FindPhotonBeamTAGR(TVirtualReader &fR);
 
 TLorentzVector   GetBeamVector(){return fClasBeam.GetVector();};
 TVector3         GetBeamVertex(){return fClasBeam.GetVertex();};
 TLorentzVector   GetTargetVector(){return fClasTarget.GetVector();};
 TVector3         GetTargetVertex(){return fClasTarget.GetVertex();};


 Int_t    FindFreeIndex(int id);
 void     SetTarget(Int_t  _pdgId, Double_t _mass, TVector3 _p3, TVector3 _v3);
 void     SetBeam(Int_t _pdgId, Double_t _mass, TVector3 _p3, TVector3 _v3);
 void     PrintInfo();
 void     PrintEvent();
 
 TClasEvent &operator=(const TClasEvent &event);

 ClassDef(TClasEvent,1)

};
#endif
