// Autogenerated Class (Source File)
// Author : G.Gavalian
// Date   : Tue Jul 14 09:19:55 EDT 2009
//

#include "TPartCounter.h"



ClassImp(TPartCounter)


TPartCounter::TPartCounter (){

}

TPartCounter::~TPartCounter (){

}

//-----------------
//-----------------
//-----------------
void   TPartCounter::SetPartInfo(const char *partList)
{
  //  TString  
  TString str_line = partList;
  TObjArray *fList = str_line.Tokenize(":");
  fPartIDStore.resize(fList->GetEntries());
  fPartStatus.resize(fList->GetEntries());
  for(int i=0;i<fList->GetEntries();i++)
    {
      fPartIDStore[i] = (static_cast<TObjString *> (fList->At(i)))->GetString().Atoi();
      printf("Adding ID = %d\n",fPartIDStore[i]);
    }
  ClearCount();
}
void   TPartCounter::ClearCount()
{
  for(int i=0;i<fPartStatus.size();i++) fPartStatus[i] = 0;
  fPartOffCountCharged = 0;
  fPartOffCountNeutral = 0;
}

void   TPartCounter::AddParticle(int id)
{
  int idx = GetNextFreeIndex(id);
  if(idx<0){
    int charge = 1;
    TParticlePDG *ptr_PART = TDatabasePDG::Instance()->GetParticle(id);
    if(ptr_PART==NULL) {
      //      printf("ERROR for Particle %d\n",id);;
    } else {
      int charge = ptr_PART->Charge();
    }

    if(charge==0) 
      fPartOffCountNeutral++; 
    else
      fPartOffCountCharged++;
  } else {
    fPartStatus[idx] = 1;
  }
}

int    TPartCounter::GetStatus()
{
  int iflag = 1;
  for(int i=0;i<fPartStatus.size();i++)
    if(fPartStatus[i]==0) iflag = 0;
  return iflag;
}

int    TPartCounter::GetNextFreeIndex(int id)
{
  for(int i=0;i<fPartIDStore.size();i++)
    if(fPartIDStore[i]==id&&fPartStatus[i]==0) return i;
  return -1;
}
